{"version":3,"sources":["store/cartReducer.js","store/categoriesReducer.js","store/productsReducer.js","store/index.js","components/Products.js","components/Categories.js","components/Header.js","components/Footer.js","components/SimpleCart.js","App.js","index.js"],"names":["initState","cartContents","cartCount","reducer","state","action","console","log","newState","type","push","payload","i","length","name","splice","allCategories","displayName","currentCategory","allProducts","description","img","stock","price","category","selected","reducers","combineReducers","cart","cartReducer","categories","categoriesReducer","products","productsReducer","createStore","useStyles","makeStyles","root","maxWidth","media","height","connect","props","classes","productsHTML","Card","key","className","CardActionArea","CardMedia","image","title","CardContent","Typography","gutterBottom","variant","component","color","CardActions","Button","size","onClick","dispatch","disabled","categoriesHTML","useState","drawerOpen","setDrawerOpen","e","Footer","id","href","target","src","alt","cartHTML","forEach","item","Grid","container","direction","justify","alignItems","xs","Delete","Accordion","AccordionSummary","expandIcon","aria-controls","AccordionDetails","App","store","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAAMA,EAAY,CACdC,aAAc,GACdC,UAAW,GAkDAC,EA/CC,WAAgC,IAA/BC,EAA8B,uDAAtBJ,EAAWK,EAAW,uCAC3CC,QAAQC,IAAI,uBAEZ,IAAIC,EAAQ,eAAQJ,GAEpB,OAAQC,EAAOI,MAGX,IAAK,cACDH,QAAQC,IAAI,QACZ,MAEJ,IAAK,cACDC,EAASP,aAAaS,KAAKL,EAAOM,SAClCH,EAASN,YACT,MAEJ,IAAK,mBAMD,IAAK,IAAIU,EAAI,EAAGA,EAAIJ,EAASP,aAAaY,OAAQD,IAC9C,GAAIP,EAAOM,QAAQG,OAASN,EAASP,aAAaW,GAAGE,KAAM,CACzDN,EAASP,aAAac,OAAOH,EAAG,GAChCJ,EAASP,aAAT,YAA4BO,EAASP,cAErCO,EAASN,YACT,OAOd,OAAOM,GCzCLR,EAAY,CACdgB,cAAe,CACX,CAAEF,KAAM,cAAeG,YAAa,eACpC,CAAEH,KAAM,OAAQG,YAAa,KAEjCC,gBAAiB,QAwBNf,EArBC,WAAgC,IAA/BC,EAA8B,uDAAtBJ,EAAWK,EAAW,uCAC3CC,QAAQC,IAAI,6BACZ,IAAIC,EAAQ,eAAQJ,GAEpB,OAAQC,EAAOI,MACX,IAAK,cACDH,QAAQC,IAAI,cACZ,MACJ,IAAK,kBACDC,EAASU,gBAAkBb,EAAOM,QAClC,MACJ,IAAK,eACDH,EAASQ,cAAcN,KAAKL,EAAOM,SAM3C,OAAOH,GC1BLR,EAAY,CACdmB,YAAa,CACT,CACIL,KAAM,KACNM,YAAa,qBACbC,IAAK,wIACLC,MAAO,EACPC,MAAO,IACPC,SAAU,cACVC,UAAU,GAEd,CACIX,KAAM,UACNM,YAAa,oBACbC,IAAK,wIACLC,MAAO,EACPC,MAAO,KACPC,SAAU,cACVC,UAAU,GAEd,CACIX,KAAM,SACNM,YAAa,wBACbC,IAAK,wIACLC,MAAO,GACPC,MAAO,GACPC,SAAU,OACVC,UAAU,GAEd,CACIX,KAAM,OACNM,YAAa,qBACbC,IAAK,wIACLC,MAAO,GACPC,MAAO,EACPC,SAAU,OACVC,UAAU,KA2CPtB,EAtCC,WAAgC,IAA/BC,EAA8B,uDAAtBJ,EAAWK,EAAW,uCAC3CC,QAAQC,IAAI,2BACZ,IAAIC,EAAQ,eAAQJ,GAEpB,OAAQC,EAAOI,MAGX,IAAK,cACDD,EAASW,YAAYT,KAAKL,EAAOM,SACjC,MACJ,IAAK,cACDL,QAAQC,IAAI,YACZ,MACJ,IAAK,cACD,IAAK,IAAIK,EAAI,EAAGA,EAAIJ,EAASW,YAAYN,OAAQD,IAC7C,GAAIP,EAAOM,QAAQG,OAASN,EAASW,YAAYP,GAAGE,KAAM,CACtDN,EAASW,YAAYP,GAAGU,MAAQd,EAASW,YAAYP,GAAGU,MAAQ,EAChEd,EAASW,YAAT,YAA2BX,EAASW,aACpC,MAGR,MACJ,IAAK,mBACD,IAAK,IAAIP,EAAI,EAAGA,EAAIJ,EAASW,YAAYN,OAAQD,IAC7C,GAAIP,EAAOM,QAAQG,OAASN,EAASW,YAAYP,GAAGE,KAAM,CACtDN,EAASW,YAAYP,GAAGU,MAAQd,EAASW,YAAYP,GAAGU,MAAQ,EAChEd,EAASW,YAAT,YAA2BX,EAASW,aACpC,OAQhB,OAAOX,GCtEPkB,EAAWC,YAAgB,CAC3BC,KAAMC,EACNC,WAAYC,EACZC,SAAUC,IAGCC,cAAYR,G,wECCrBS,EAAYC,YAAW,CACzBC,KAAM,CACJC,SAAU,KAEZC,MAAO,CACLC,OAAQ,OAwEd,IAOeC,eAPS,SAACrC,GACrB,MAAO,CACH4B,SAAU5B,EAAM4B,SAASb,YACzBD,gBAAiBd,EAAM0B,WAAWZ,mBAI3BuB,EAzEb,SAAkBC,GAShB,IAHE,IAAMC,EAAUR,IACdS,EAAe,GAPI,WASdhC,GACD8B,EAAMV,SAASpB,GAAGY,WAAakB,EAAMxB,iBACrC0B,EAAalC,KAAO,kBAACmC,EAAA,EAAD,CAAMC,IAAKlC,EAAGmC,UAAWJ,EAAQN,MACjD,kBAACW,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIF,UAAWJ,EAAQJ,MACnBW,MAAOR,EAAMV,SAASpB,GAAGS,IACzB8B,MAAOT,EAAMV,SAASpB,GAAGE,OAE7B,kBAACsC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAC3Cd,EAAMV,SAASpB,GAAGE,MAEvB,kBAACuC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAC3Cd,EAAMV,SAASpB,GAAGW,OAEvB,kBAAC8B,EAAA,EAAD,CAAYI,MAAM,cAAcD,UAAU,KAA1C,aACmBd,EAAMV,SAASpB,GAAGU,OAErC,kBAAC+B,EAAA,EAAD,CAAYE,QAAQ,QAAQE,MAAM,gBAAgBD,UAAU,KACvDd,EAAMV,SAASpB,GAAGQ,eAI/B,kBAACsC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQC,KAAK,QAAQH,MAAM,UAC1BI,QAAS,WACNnB,EAAMoB,SAAS,CACXrD,KAAM,cACNE,QAAS+B,EAAMV,SAASpB,MAIhCmD,SAAUrB,EAAMV,SAASpB,GAAGU,MAAQ,GARpC,eAUA,kBAACqC,EAAA,EAAD,CAAQC,KAAK,QAAQH,MAAM,WAA3B,oBAnCP7C,EAAI,EAAGA,EAAI8B,EAAMV,SAASnB,OAAQD,IAAM,EAAxCA,GA0CT,OACI,oCACI,wCACA,yBAAKmC,UAAU,gBACdH,O,QC7Cb,IAMeH,eANS,SAACrC,GACrB,MAAO,CACH0B,WAAY1B,EAAM0B,WAAWd,iBAItByB,EApCf,SAAoBC,GAIhB,IAHA,IAAIsB,EAAiB,GADE,EAEaC,oBAAS,GAFtB,mBAEhBC,EAFgB,KAEJC,EAFI,gBAIdvD,GACLoD,EAAetD,KACX,kBAACiD,EAAA,EAAD,CACIJ,QAAQ,YACRE,MAAM,YACNX,IAAKlC,EACLiD,QAAS,SAACO,GAEN1B,EAAMoB,SAAS,CACXrD,KAAM,kBACNE,QAAS+B,EAAMZ,WAAWlB,GAAGE,OAU7CqD,GAAeD,KALNxB,EAAMZ,WAAWlB,GAAGK,aAAeyB,EAAMZ,WAAWlB,GAAGE,QAf3DF,EAAI,EAAGA,EAAI8B,EAAMZ,WAAWjB,OAAQD,IAA7C,EAASA,GAuBT,OAAO,oCAAE,yBAAKmC,UAAW,iBAAiBiB,OCnB9C,IAMevB,eANS,SAACrC,GACvB,MAAO,CACHwB,KAAMxB,EAAMwB,QAIHa,EAff,SAAgBC,GACd,OACE,gCACE,yCACA,oCAAUA,EAAMd,KAAK1B,UAArB,SCNS,SAASmE,IACtB,OACE,gCACE,yBAAKC,GAAG,oBACN,gDACA,uBAAGC,KAAK,+CAA+CC,OAAO,UAC5D,yBAAKC,IAAK,uBAAwBC,IAAK,cAEzC,uBAAGH,KAAK,iCAAiCC,OAAO,UAC9C,yBAAKC,IAAK,qBAAsBC,IAAK,c,6DCkDhCjC,mBAPf,SAAyBrC,GACvB,MAAO,CACLH,aAAcG,EAAMwB,KAAK3B,aACzBC,UAAWE,EAAMwB,KAAK1B,aAIXuC,EArDf,SAAoBC,GAClB,IAAIiC,EAAW,GA2Bf,OAzBAjC,EAAMzC,aAAa2E,SAAQ,SAACC,EAAMjE,GAChC+D,EAASjE,KACP,kBAACoE,EAAA,EAAD,CAAMhC,IAAKlC,EAAGmE,WAAS,EAACC,UAAU,MAAMC,QAAQ,eAAeC,WAAW,UACxE,kBAACJ,EAAA,EAAD,CAAMD,MAAI,EAACM,GAAI,GACb,kBAAC9B,EAAA,EAAD,KACGwB,EAAK/D,OAGV,kBAACgE,EAAA,EAAD,CAAMD,MAAI,EAACM,GAAI,GACb,kBAACxB,EAAA,EAAD,CACEZ,UAAU,uBACVc,QAAS,SAACO,GACR1B,EAAMoB,SAAS,CACbrD,KAAM,mBACNE,QAASkE,MAIb,kBAACO,EAAA,EAAD,aAQR,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACIC,WAAY,kBAAC,IAAD,MACZC,gBAAc,kBACdlB,GAAG,kBAEH,kBAACjB,EAAA,EAAD,eAEJ,kBAACoC,EAAA,EAAD,KACE,kBAACX,EAAA,EAAD,CAAMC,WAAS,GACXJ,QCZGe,MAhBf,WACI,OACI,kBAAC,IAAD,CAAUC,MAAOA,GACb,yBAAK5C,UAAU,OACX,kBAAC,EAAD,MACA,yBAAKA,UAAW,YAChB,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEA,kBAACsB,EAAD,SCxBhBuB,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,W","file":"static/js/main.46cd62d5.chunk.js","sourcesContent":["const initState = {\n    cartContents: [],\n    cartCount: 0,\n};\n\nconst reducer = (state = initState, action) => {\n    console.log('cart reducer called');\n\n    let newState = { ...state };\n\n    switch (action.type) {\n        // define our application's acceptable actions\n\n        case 'CONSOLE_LOG':\n            console.log('cart');\n            break;\n\n        case 'ADD_TO_CART':\n            newState.cartContents.push(action.payload);\n            newState.cartCount++;\n            break;\n\n        case 'REMOVE_FROM_CART':\n            // newState.cartCount--;\n            // newState.cartContents = newState.cartContents.filter((val) => {\n            //     return val.name !== action.payload;\n            // });\n            // break;\n            for (let i = 0; i < newState.cartContents.length; i++) {\n                if (action.payload.name === newState.cartContents[i].name) {\n                  newState.cartContents.splice(i, 1);\n                  newState.cartContents = [...newState.cartContents];\n        \n                  newState.cartCount--;\n                  break;\n                }\n              }\n        default:\n            break;\n    }\n\n    return newState;\n};\n\nconst consoleLog = (dispatch) => {\n    return dispatch({ type: 'CONSOLE_LOG' });\n};\n\nconst add = (product) => {\n    return { type: 'ADD_TO_CART', payload: product };\n};\n\nexport default reducer;\nexport { consoleLog, add };\n","const initState = {\n    allCategories: [\n        { name: 'electronics', displayName: 'Electronics' },\n        { name: 'food', displayName: '' },\n    ],\n    currentCategory: 'food',\n};\n\nconst reducer = (state = initState, action) => {\n    console.log('categories reducer called');\n    let newState = { ...state };\n\n    switch (action.type) {\n        case 'CONSOLE_LOG':\n            console.log('categories');\n            break;\n        case 'CHANGE_CATEGORY':\n            newState.currentCategory = action.payload;\n            break;\n        case 'ADD_CATEGORY':\n            newState.allCategories.push(action.payload);\n            break;\n        default:\n            break;\n    }\n\n    return newState;\n};\n\nexport default reducer;\n","const initState = {\n    allProducts: [\n        {\n            name: 'TV',\n            description: 'See all the things',\n            img: 'https://images.unsplash.com/photo-1579894059380-1866b68bce6b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60',\n            stock: 5,\n            price: 400,\n            category: 'electronics',\n            selected: false,\n        },\n        {\n            name: 'Macbook',\n            description: 'Do all the things',\n            img: 'https://images.unsplash.com/photo-1522156373667-4c7234bbd804?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60',\n            stock: 7,\n            price: 1200,\n            category: 'electronics',\n            selected: false,\n        },\n        {\n            name: 'Carrot',\n            description: 'Crunch all the things',\n            img: 'https://images.unsplash.com/photo-1522184216316-3c25379f9760?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60',\n            stock: 25,\n            price: 0.3,\n            category: 'food',\n            selected: false,\n        },\n        {\n            name: 'Cake',\n            description: 'Lie all the things',\n            img: 'https://images.unsplash.com/photo-1516054575922-f0b8eeadec1a?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60',\n            stock: 10,\n            price: 5,\n            category: 'food',\n            selected: false,\n        },\n    ],\n};\n\nconst reducer = (state = initState, action) => {\n    console.log('products reducer called');\n    let newState = { ...state };\n\n    switch (action.type) {\n        // define our application's acceptable actions\n\n        case 'ADD_PRODUCT':\n            newState.allProducts.push(action.payload);\n            break;\n        case 'CONSOLE_LOG':\n            console.log('products');\n            break;\n        case 'ADD_TO_CART':\n            for (let i = 0; i < newState.allProducts.length; i++) {\n                if (action.payload.name === newState.allProducts[i].name) {\n                    newState.allProducts[i].stock = newState.allProducts[i].stock - 1;\n                    newState.allProducts = [...newState.allProducts];\n                    break;\n                }\n            }\n            break;\n        case 'REMOVE_FROM_CART':\n            for (let i = 0; i < newState.allProducts.length; i++) {\n                if (action.payload.name === newState.allProducts[i].name) {\n                    newState.allProducts[i].stock = newState.allProducts[i].stock + 1;\n                    newState.allProducts = [...newState.allProducts];\n                    break;\n                }\n            }\n            break;\n        default:\n            break;\n    }\n\n    return newState;\n};\n\nexport default reducer;\n","import { createStore, combineReducers } from 'redux';\n\nimport cartReducer from './cartReducer';\nimport categoriesReducer from './categoriesReducer';\nimport productsReducer from './productsReducer';\n\nlet reducers = combineReducers({\n    cart: cartReducer,\n    categories: categoriesReducer,\n    products: productsReducer,\n});\n\nexport default createStore(reducers);\n","import React from 'react';\nimport { connect } from 'react-redux';\n// import { Button } from '@material-ui/core';\nimport { consoleLog, add } from '../store/cartReducer';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    root: {\n      maxWidth: 345,\n    },\n    media: {\n      height: 140,\n    },\n  });\n\n  \n  \n  function Products(props) {\n      // list all the products that belong to the\n      // current selected category\n      \n      // only show the products that belong to the current category\n      \n      const classes = useStyles();\n    let productsHTML = [];\n\n    for (let i = 0; i < props.products.length; i++) {\n        if (props.products[i].category === props.currentCategory)\n            productsHTML.push(  <Card key={i} className={classes.root}>\n                <CardActionArea>\n                    <CardMedia\n                        className={classes.media}\n                        image={props.products[i].img}\n                        title={props.products[i].name}\n                    />\n                    <CardContent>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            {props.products[i].name}\n                        </Typography>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            {props.products[i].price}\n                        </Typography>\n                        <Typography color=\"textPrimary\" component=\"p\">\n                                Quantity: {props.products[i].stock}\n                            </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            {props.products[i].description}\n                        </Typography>\n                    </CardContent>\n                </CardActionArea>\n                <CardActions>\n                    <Button size=\"small\" color=\"primary\"\n                     onClick={() => { \n                        props.dispatch({\n                            type: 'ADD_TO_CART',\n                            payload: props.products[i]\n                        });\n                        \n                    }} \n                    disabled={props.products[i].stock < 1 ? true : false}\n                    >Add To Cart</Button>\n                    <Button size=\"small\" color=\"primary\">\n                        View Details\n                    </Button>\n                </CardActions>\n            </Card>);\n    }\n\n    return (\n        <>\n            <h2>Products</h2>\n            <div className='main-product'>  \n            {productsHTML}\n            </div>\n        </>\n    );\n}\n\n// connect() --> returns a function (assume it's called foo)\n// let foo = connect(mapStateToProps);\n// let connectedComponent = foo(Products)\n// export default connectedComponent\n\nconst mapStateToProps = (state) => {\n    return {\n        products: state.products.allProducts,\n        currentCategory: state.categories.currentCategory,\n    };\n};\n\nexport default connect(mapStateToProps)(Products);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Drawer } from '@material-ui/core';\n\nfunction Categories(props) {\n    let categoriesHTML = [];\n    const [drawerOpen, setDrawerOpen] = useState(false);\n\n    for (let i = 0; i < props.categories.length; i++)\n        categoriesHTML.push(\n            <Button\n                variant='contained'\n                color='secondary'\n                key={i}\n                onClick={(e) => {\n                    // change the current category\n                    props.dispatch({\n                        type: 'CHANGE_CATEGORY',\n                        payload: props.categories[i].name,\n                    });\n                    toggleDrawer();\n                }}\n            >\n                {props.categories[i].displayName || props.categories[i].name}\n            </Button>,\n        );\n\n    function toggleDrawer() {\n        setDrawerOpen(!drawerOpen);\n    }\n\n    return <><div className ='main-category'>{categoriesHTML}</div></>;\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        categories: state.categories.allCategories,\n    };\n};\n\nexport default connect(mapStateToProps)(Categories);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nfunction Header(props) {\n  return (\n    <header>\n      <h1>401 Store</h1>\n      <p>Cart ({props.cart.cartCount})</p>\n    </header>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n      cart: state.cart,\n  };\n};\n\nexport default connect(mapStateToProps)(Header);","import React from 'react';\nexport default function Footer() {\n  return (\n    <footer>\n      <div id=\"external-account\">\n        <h1>Shubham Majumdar</h1>\n        <a href='https://www.linkedin.com/in/majumdar-shubham' target='_blank'>\n          <img src={'/assets/linkedin.jpg'} alt={'LinkedIn'} />\n        </a>\n        <a href='https://github.com/smajumdar22' target='_blank'>\n          <img src={'/assets/github.png'} alt={'GitHub'} />\n        </a>\n      </div>\n    </footer>\n  )\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Grid, Typography, Button, Accordion, AccordionSummary, AccordionDetails } from '@material-ui/core';\nimport {Delete} from '@material-ui/icons';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\n\n\nfunction SimpleCart(props) {\n  let cartHTML = [];\n\n  props.cartContents.forEach((item, i) => {\n    cartHTML.push(\n      <Grid key={i} container direction=\"row\" justify=\"space-evenly\" alignItems=\"center\">\n        <Grid item xs={9}>\n          <Typography>\n            {item.name}\n          </Typography>\n        </Grid>\n        <Grid item xs={3}>\n          <Button \n            className=\"removeFromCartButton\"\n            onClick={(e) => {\n              props.dispatch({\n                type: 'REMOVE_FROM_CART',\n                payload: item\n              })\n            }}\n          >\n            <Delete />\n          </Button>\n        </Grid>\n      </Grid>\n    )\n  })\n\n  return (\n    <Accordion>\n      <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography>Items</Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <Grid container>\n          { cartHTML }\n        </Grid>\n      </AccordionDetails>\n    </Accordion>\n  )\n}\n\nfunction mapStateToProps(state) {\n  return {\n    cartContents: state.cart.cartContents,\n    cartCount: state.cart.cartCount\n  }\n}\n\nexport default connect(mapStateToProps)(SimpleCart)","import React from 'react';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './styles/styles.scss';\nimport { Grid } from '@material-ui/core';\n\n\nimport Products from './components/Products';\nimport Categories from './components/Categories';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport SimpleCart from './components/SimpleCart';\n\n\n// Connecting our app to our global state redux store\n// xx Wrap the whole app in a \"store provider\"\n// -- Pick individual components to \"connect\" and become \"consumers\"\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <div className='App'>\n                <Header />\n                <div className ='main-div'>\n                <Categories />\n                <SimpleCart/>\n                <Products />\n                </div>\n                <Footer />\n            </div>\n        </Provider>\n    );\n}\n\nexport default App;\n"," import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}